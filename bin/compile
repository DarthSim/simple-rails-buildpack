#!/bin/sh
set -e

mkdir -p "$1" "$2"

build_dir=$1
cache_dir=$2
env_dir=$3
buildpack_dir=$(cd "$(dirname $0)/.." && pwd)


env_blacklist_regex='(PATH|GEM_PATH|GEM_HOME|GIT_DIR|SSH_KEY)'

if [ -d "$env_dir" ]; then
  for e in $(ls $env_dir); do
    echo "$e" | grep -qvE "$env_blacklist_regex" &&
    export "$e=$(cat $env_dir/$e)"
    :
  done
fi

if [ -f "$build_dir/.ruby-version" ]; then
  app_ruby_version=`cat $build_dir/.ruby-version`
fi
app_ruby_version=${app_ruby_version:-"2.3.4"}
ruby_version=${RUBY_VERSION:-$app_ruby_version}
vendor_url=${RUBY_VENDOR_URL:-"https://s3-external-1.amazonaws.com/heroku-buildpack-ruby/cedar-14"}

ruby_url="$vendor_url/ruby-$ruby_version.tgz"

arch_filename="ruby-$ruby_version.tgz"
arch_cache_path="$2/$arch_filename"

ruby_path="$build_dir/vendor/ruby"

bundler_path="vendor/bundle"
bundler_bin_path="$bundler_path/bin"
bundler_cache_path="$cache_dir/bundle"
bundler_config_path=".bundle/config"


title() {
  echo ""
  echo "-----> $1"
}


if [ ! -e "$arch_cache_path" ]; then
  title "Download ruby $ruby_version from $ruby_url"
  wget "$ruby_url" -O "$arch_cache_path" --quiet
else
  title "Ruby $ruby_version was cached before."
fi

title "Unpacking ruby"

mkdir -p "$ruby_path"
tar zxf "$arch_cache_path" -C "$ruby_path"

export PATH="$ruby_path/bin:$PATH"
unset GEM_PATH

if [ -n "$UPDATE_RUBYGEMS" ]; then
  title "Updating rubygems"
  gem update --system
fi

title "Installing dependencies using bundler"

cd "$build_dir"
rm -rf "$bundler_path"

if [ -d "$bundler_cache_path" ]; then
  cp -r "$bundler_cache_path" "$bundler_path"
fi

gem install bundler --no-rdoc --no-ri
mkdir -p "$bundler_bin_path"
bundle install --without development:test --path "$bundler_path" --binstubs "$bundler_bin_path" -j4 --deployment
bundle clean > /dev/null

rm -rf "$bundler_cache_path"
cp -r "$bundler_path" "$bundler_cache_path"

export PATH="$build_dir/$bundler_bin_path:$PATH"


if [ -n "$UPDATE_RUBYGEMS" ]; then
  sed -i -e 's/\/tmp\/build/\/app/g' /tmp/build/vendor/ruby/bin/gem
fi


mkdir -p "$build_dir/.profile.d"
echo 'export PATH=$HOME/bin:$HOME/vendor/bundle/bin:$HOME/vendor/ruby/bin:$PATH' > "$build_dir/.profile.d/rails.sh"
echo 'export LANG=en_US.UTF-8' >> "$build_dir/.profile.d/rails.sh"

echo "export PATH=$PATH" > "$buildpack_dir/export"
